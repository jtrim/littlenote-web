// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  App.RegisterCommand = (function(_super) {

    __extends(RegisterCommand, _super);

    RegisterCommand.prototype.mode = 'email';

    function RegisterCommand(searchbox) {
      this.searchbox = searchbox;
      RegisterCommand.__super__.constructor.call(this, {
        el: this.searchbox.el
      });
    }

    RegisterCommand.prototype.initialize = function() {
      this.searchbox.undelegateEvents();
      this.searchbox.$el.val('');
      return App.StatusBar.show("Enter your email");
    };

    RegisterCommand.prototype.events = {
      "keyup": "onKeyUp"
    };

    RegisterCommand.prototype.onKeyUp = function(event) {
      if (!this.wasEnterKey(event)) {
        return;
      }
      switch (this.mode) {
        case "email":
          App.StatusBar.show("Enter a password");
          this.email = this.$el.val();
          this.mode = "password";
          this.$el.val('');
          return this.$el.attr('type', 'password');
        case "password":
          this.password = this.$el.val();
          this.$el.val('');
          this.$el.attr('type', 'text');
          return this.submitRegistration();
      }
    };

    RegisterCommand.prototype.submitRegistration = function() {
      var _this = this;
      return $.ajax({
        url: "/register",
        contentType: 'application/json',
        type: "POST",
        data: JSON.stringify({
          email: this.email,
          password: this.password
        })
      }).done(function() {
        return App.StatusBar.show("Signed up. You are now logged in.");
      }).fail(function(jqxhr) {
        if (jqxhr.status === 422) {
          return App.StatusBar.show("Error: " + jqxhr.responseText, true);
        } else {
          return App.StatusBar.show("Sorry, something went wrong.", true);
        }
      }).always(function() {
        _this.undelegateEvents();
        return _this.searchbox.delegateEvents();
      });
    };

    RegisterCommand.prototype.wasEnterKey = function(event) {
      return event.keyCode === 13;
    };

    return RegisterCommand;

  })(Backbone.View);

}).call(this);
